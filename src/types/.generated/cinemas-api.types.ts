/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search for movie schedules */
        get: operations["AppController_getFlightPrices"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @enum {string} */
        Neighborhood: "Mitte" | "Prenzlauer Berg" | "Kreuzberg" | "Friedrichshain" | "Neukölln" | "Charlottenburg" | "Schöneberg";
        Cinema: {
            /** @description Unique identifier for the cinema */
            id: number;
            /** @description Name of the cinema */
            name: string;
            /** @description Neighborhood where the cinema is located */
            neighborhood: string;
            /** @description Physical address of the cinema */
            address: string;
            /** @description City where the cinema is located */
            city: string;
            /** @description Postal code of the cinema location */
            postalCode: string;
            /** @description Country where the cinema is located */
            country: string;
            /** @description Website URL of the cinema */
            website: string;
            /**
             * @description Opening hours of the cinema
             * @example 09:00 - 23:00
             */
            openingHours?: string;
            /** @description Detailed description of the cinema */
            description: string;
            /** @description URL to the cinema's image */
            imageUrl?: string;
            /** @description Google maps URL */
            gMapsUrl: string;
        };
        AgeClassification: {
            /**
             * @description Type of age classification
             * @example FSK
             */
            type?: string;
            /**
             * @description Value of the age classification
             * @example 12
             */
            value: string;
        };
        ObjectWithName: {
            /** @description Name of the object */
            name: string;
        };
        Trailer: {
            /**
             * @description Format of the trailer
             * @example youtube
             */
            format: string;
            /**
             * @description URL of the trailer video
             * @example https://youtube.com/watch?v=example
             */
            url: string;
        };
        Movie: {
            /** @description Unique identifier for the movie */
            id: number;
            /** @description Day of the week the movie is showing */
            weekDay: string;
            /** @description Date in YYYY-MM-DD format */
            date: string;
            /** @description Showtime in HH:mm format */
            time: string;
            /** @description Movie title in local language */
            title: string;
            /** @description Original movie title */
            title_orig: string;
            /** @description Movie plot summary */
            description: string;
            /** @description Cinema where the movie is showing */
            cinema: components["schemas"]["Cinema"];
            /**
             * @description Language of the movie
             * @example OmdU
             */
            language?: string;
            /** @description Movie duration in minutes */
            duration: number;
            /**
             * @description Age classification information
             * @example {
             *       "type": "FSK",
             *       "value": "12"
             *     }
             */
            ageClassificationRating?: components["schemas"]["AgeClassification"];
            /** @description Whether a trailer is available */
            hasTrailer: boolean;
            /**
             * @description List of movie genres
             * @example [
             *       {
             *         "name": "Action"
             *       },
             *       {
             *         "name": "Adventure"
             *       }
             *     ]
             */
            genres: components["schemas"]["ObjectWithName"][];
            /** @description URL to the thumbnail image */
            lazyImage: string;
            /** @description URL to the full-size poster image */
            largeImage: string;
            /**
             * @description List of movie directors
             * @example [
             *       {
             *         "name": "Christopher Nolan"
             *       }
             *     ]
             */
            directors: components["schemas"]["ObjectWithName"][];
            /**
             * @description List of movie trailers
             * @example [
             *       {
             *         "format": "youtube",
             *         "url": "https://youtube.com/watch?v=example"
             *       }
             *     ]
             */
            trailers: components["schemas"]["Trailer"][];
            /**
             * @description List of production countries
             * @example [
             *       "USA",
             *       "UK"
             *     ]
             */
            productionCountries: string[];
            /**
             * @description List of actors in the movie
             * @example [
             *       {
             *         "name": "Leonardo DiCaprio"
             *       },
             *       {
             *         "name": "Kate Winslet"
             *       }
             *     ]
             */
            actors: components["schemas"]["ObjectWithName"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    AppController_getFlightPrices: {
        parameters: {
            query: {
                /** @description Language for the API response */
                language: "de" | "en";
                /** @description Date to filter movies by (format: YYYY-MM-DD) */
                date?: string;
                /** @description Text to search for in movie titles or cinema names */
                query?: string;
                /** @description Filter by cinemas in specific neighborhoods */
                neighborhood?: components["schemas"]["Neighborhood"][];
                city: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns a list of movies with their schedules */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Movie"][];
                };
            };
        };
    };
}
